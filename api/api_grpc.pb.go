// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package wedo

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CloudTaskManageServiceClient is the client API for CloudTaskManageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CloudTaskManageServiceClient interface {
	// Creates a deployment.
	DeploymentCreate(ctx context.Context, in *DeploymentCreateRequest, opts ...grpc.CallOption) (*DeploymentCreateResponse, error)
}

type cloudTaskManageServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCloudTaskManageServiceClient(cc grpc.ClientConnInterface) CloudTaskManageServiceClient {
	return &cloudTaskManageServiceClient{cc}
}

func (c *cloudTaskManageServiceClient) DeploymentCreate(ctx context.Context, in *DeploymentCreateRequest, opts ...grpc.CallOption) (*DeploymentCreateResponse, error) {
	out := new(DeploymentCreateResponse)
	err := c.cc.Invoke(ctx, "/github.com.wedo_workflow.wedo.api.v1.CloudTaskManageService/DeploymentCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CloudTaskManageServiceServer is the server API for CloudTaskManageService service.
// All implementations must embed UnimplementedCloudTaskManageServiceServer
// for forward compatibility
type CloudTaskManageServiceServer interface {
	// Creates a deployment.
	DeploymentCreate(context.Context, *DeploymentCreateRequest) (*DeploymentCreateResponse, error)
	mustEmbedUnimplementedCloudTaskManageServiceServer()
}

// UnimplementedCloudTaskManageServiceServer must be embedded to have forward compatible implementations.
type UnimplementedCloudTaskManageServiceServer struct {
}

func (UnimplementedCloudTaskManageServiceServer) DeploymentCreate(context.Context, *DeploymentCreateRequest) (*DeploymentCreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeploymentCreate not implemented")
}
func (UnimplementedCloudTaskManageServiceServer) mustEmbedUnimplementedCloudTaskManageServiceServer() {
}

// UnsafeCloudTaskManageServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CloudTaskManageServiceServer will
// result in compilation errors.
type UnsafeCloudTaskManageServiceServer interface {
	mustEmbedUnimplementedCloudTaskManageServiceServer()
}

func RegisterCloudTaskManageServiceServer(s grpc.ServiceRegistrar, srv CloudTaskManageServiceServer) {
	s.RegisterService(&CloudTaskManageService_ServiceDesc, srv)
}

func _CloudTaskManageService_DeploymentCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeploymentCreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CloudTaskManageServiceServer).DeploymentCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/github.com.wedo_workflow.wedo.api.v1.CloudTaskManageService/DeploymentCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CloudTaskManageServiceServer).DeploymentCreate(ctx, req.(*DeploymentCreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// CloudTaskManageService_ServiceDesc is the grpc.ServiceDesc for CloudTaskManageService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CloudTaskManageService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "github.com.wedo_workflow.wedo.api.v1.CloudTaskManageService",
	HandlerType: (*CloudTaskManageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DeploymentCreate",
			Handler:    _CloudTaskManageService_DeploymentCreate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/api.proto",
}
