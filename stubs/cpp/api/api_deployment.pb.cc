// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/api_deployment.proto

#include "api/api_deployment.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace github {
namespace com {
namespace wedo_workflow {
namespace wedo {
constexpr DeploymentCreateRequest::DeploymentCreateRequest(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DeploymentCreateRequestDefaultTypeInternal {
  constexpr DeploymentCreateRequestDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeploymentCreateRequestDefaultTypeInternal() {}
  union {
    DeploymentCreateRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeploymentCreateRequestDefaultTypeInternal _DeploymentCreateRequest_default_instance_;
constexpr DeploymentCreateResponse::DeploymentCreateResponse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct DeploymentCreateResponseDefaultTypeInternal {
  constexpr DeploymentCreateResponseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~DeploymentCreateResponseDefaultTypeInternal() {}
  union {
    DeploymentCreateResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT DeploymentCreateResponseDefaultTypeInternal _DeploymentCreateResponse_default_instance_;
}  // namespace wedo
}  // namespace wedo_workflow
}  // namespace com
}  // namespace github
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_api_2fapi_5fdeployment_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_api_2fapi_5fdeployment_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_api_2fapi_5fdeployment_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_api_2fapi_5fdeployment_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::wedo_workflow::wedo::DeploymentCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::github::com::wedo_workflow::wedo::DeploymentCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::github::com::wedo_workflow::wedo::DeploymentCreateRequest)},
  { 5, -1, sizeof(::github::com::wedo_workflow::wedo::DeploymentCreateResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::github::com::wedo_workflow::wedo::_DeploymentCreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::github::com::wedo_workflow::wedo::_DeploymentCreateResponse_default_instance_),
};

const char descriptor_table_protodef_api_2fapi_5fdeployment_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030api/api_deployment.proto\022\035github.com.w"
  "edo_workflow.wedo\032\034google/api/annotation"
  "s.proto\032\037google/protobuf/timestamp.proto"
  "\"\031\n\027DeploymentCreateRequest\"\032\n\030Deploymen"
  "tCreateResponseB\037Z\035github.com/wedo-workf"
  "low/wedob\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_api_2fapi_5fdeployment_2eproto_deps[2] = {
  &::descriptor_table_google_2fapi_2fannotations_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_api_2fapi_5fdeployment_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_api_2fapi_5fdeployment_2eproto = {
  false, false, 216, descriptor_table_protodef_api_2fapi_5fdeployment_2eproto, "api/api_deployment.proto", 
  &descriptor_table_api_2fapi_5fdeployment_2eproto_once, descriptor_table_api_2fapi_5fdeployment_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_api_2fapi_5fdeployment_2eproto::offsets,
  file_level_metadata_api_2fapi_5fdeployment_2eproto, file_level_enum_descriptors_api_2fapi_5fdeployment_2eproto, file_level_service_descriptors_api_2fapi_5fdeployment_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK ::PROTOBUF_NAMESPACE_ID::Metadata
descriptor_table_api_2fapi_5fdeployment_2eproto_metadata_getter(int index) {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_api_2fapi_5fdeployment_2eproto);
  return descriptor_table_api_2fapi_5fdeployment_2eproto.file_level_metadata[index];
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_api_2fapi_5fdeployment_2eproto(&descriptor_table_api_2fapi_5fdeployment_2eproto);
namespace github {
namespace com {
namespace wedo_workflow {
namespace wedo {

// ===================================================================

class DeploymentCreateRequest::_Internal {
 public:
};

DeploymentCreateRequest::DeploymentCreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
}
DeploymentCreateRequest::DeploymentCreateRequest(const DeploymentCreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
}

void DeploymentCreateRequest::SharedCtor() {
}

DeploymentCreateRequest::~DeploymentCreateRequest() {
  // @@protoc_insertion_point(destructor:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeploymentCreateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeploymentCreateRequest::ArenaDtor(void* object) {
  DeploymentCreateRequest* _this = reinterpret_cast< DeploymentCreateRequest* >(object);
  (void)_this;
}
void DeploymentCreateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeploymentCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeploymentCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeploymentCreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeploymentCreateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
  return target;
}

size_t DeploymentCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeploymentCreateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeploymentCreateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeploymentCreateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
    MergeFrom(*source);
  }
}

void DeploymentCreateRequest::MergeFrom(const DeploymentCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeploymentCreateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeploymentCreateRequest::CopyFrom(const DeploymentCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.wedo_workflow.wedo.DeploymentCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeploymentCreateRequest::IsInitialized() const {
  return true;
}

void DeploymentCreateRequest::InternalSwap(DeploymentCreateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeploymentCreateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class DeploymentCreateResponse::_Internal {
 public:
};

DeploymentCreateResponse::DeploymentCreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
}
DeploymentCreateResponse::DeploymentCreateResponse(const DeploymentCreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
}

void DeploymentCreateResponse::SharedCtor() {
}

DeploymentCreateResponse::~DeploymentCreateResponse() {
  // @@protoc_insertion_point(destructor:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeploymentCreateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DeploymentCreateResponse::ArenaDtor(void* object) {
  DeploymentCreateResponse* _this = reinterpret_cast< DeploymentCreateResponse* >(object);
  (void)_this;
}
void DeploymentCreateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeploymentCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void DeploymentCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeploymentCreateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeploymentCreateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
  return target;
}

size_t DeploymentCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeploymentCreateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeploymentCreateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeploymentCreateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
    MergeFrom(*source);
  }
}

void DeploymentCreateResponse::MergeFrom(const DeploymentCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DeploymentCreateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeploymentCreateResponse::CopyFrom(const DeploymentCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:github.com.wedo_workflow.wedo.DeploymentCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeploymentCreateResponse::IsInitialized() const {
  return true;
}

void DeploymentCreateResponse::InternalSwap(DeploymentCreateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeploymentCreateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace wedo
}  // namespace wedo_workflow
}  // namespace com
}  // namespace github
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::github::com::wedo_workflow::wedo::DeploymentCreateRequest* Arena::CreateMaybeMessage< ::github::com::wedo_workflow::wedo::DeploymentCreateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::github::com::wedo_workflow::wedo::DeploymentCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::github::com::wedo_workflow::wedo::DeploymentCreateResponse* Arena::CreateMaybeMessage< ::github::com::wedo_workflow::wedo::DeploymentCreateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::github::com::wedo_workflow::wedo::DeploymentCreateResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
